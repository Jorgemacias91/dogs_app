{"ast":null,"code":"export const GET_RAZA_DETAIL = \"GET_RAZA_DETAIL\";\nexport const GET_RAZA_ALL = \"GET_RAZA_ALL\";\nexport const GET_RAZA = \"GET_RAZA\";\nexport const GET_TEMPERAMENTO = \"GET_TEMPERAMENTO\";\nexport const SORT_RAZA = \"SORT_RAZA\";\nexport const ASD = 'Razas-A-Z';\nexport const DES = 'Razas-Z-A';\nexport function getRazasAll() {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA_ALL,\n        payload: json\n      });\n    });\n  };\n}\nexport function getRazasDetails(razaId) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs/${razaId}`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA_DETAIL,\n        payload: json\n      });\n    });\n  };\n}\nexport function getRaza(razaName) {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/dogs?name=${razaName}`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_RAZA,\n        payload: json\n      });\n    });\n  };\n}\nexport function getTemperamentos() {\n  return function (dispatch) {\n    return fetch(`http://localhost:3001/temperament`).then(response => response.json()).then(json => {\n      dispatch({\n        type: GET_TEMPERAMENTO,\n        payload: json\n      });\n    });\n  };\n}\nexport function sort(orden, razas) {\n  let razaSort = [...razas];\n  razaSort.sort(function (a, b) {\n    var nombreA = a.name.toUpperCase();\n    var nombreB = b.name.toUpperCase();\n\n    if (orden === ASD) {\n      if (nombreA < nombreB) {\n        return -1;\n      }\n\n      if (nombreA > nombreB) {\n        return 1;\n      }\n\n      return 0;\n    }\n\n    if (orden === DES) {\n      if (nombreA < nombreB) {\n        return 1;\n      }\n\n      if (nombreA > nombreB) {\n        return -1;\n      }\n\n      return 0;\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: SORT_RAZA,\n      payload: razaSort\n    });\n  };\n}\nexport function filtroTemp(razaActual, temperamento) {\n  let filtro = [...razaActual];\n  filtro = filtro.filter(actual => {\n    if (actual.temperament) {\n      let razaTemp = actual.temperament.split(', ');\n      return razaTemp.includes(temperamento);\n    } else {\n      return false;\n    }\n  });\n  return function (dispatch) {\n    dispatch({\n      type: SORT_RAZA,\n      payload: filtro\n    });\n  };\n} //https://api.thedogapi.com/v1/images/search?breed_ids=1\n// forma de buscar por id","map":{"version":3,"sources":["/home/jorgem/Proyectos/dogs_app/clients/src/actions/index.js"],"names":["GET_RAZA_DETAIL","GET_RAZA_ALL","GET_RAZA","GET_TEMPERAMENTO","SORT_RAZA","ASD","DES","getRazasAll","dispatch","fetch","then","response","json","type","payload","getRazasDetails","razaId","getRaza","razaName","getTemperamentos","sort","orden","razas","razaSort","a","b","nombreA","name","toUpperCase","nombreB","filtroTemp","razaActual","temperamento","filtro","filter","actual","temperament","razaTemp","split","includes"],"mappings":"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","sourcesContent":["export const GET_RAZA_DETAIL = \"GET_RAZA_DETAIL\";\nexport const GET_RAZA_ALL = \"GET_RAZA_ALL\";\nexport const GET_RAZA = \"GET_RAZA\";\nexport const GET_TEMPERAMENTO = \"GET_TEMPERAMENTO\";\nexport const SORT_RAZA = \"SORT_RAZA\";\nexport const ASD = 'Razas-A-Z';\nexport const DES = 'Razas-Z-A';\n\nexport function getRazasAll() {\n    return function (dispatch){\n        return fetch(`http://localhost:3001/dogs`)\n        .then(response => response.json())\n        .then(json => {\n            dispatch({type: GET_RAZA_ALL, payload : json})\n        })\n    }\n\n}\n\n\nexport function getRazasDetails(razaId) {\n    return function (dispatch){\n        return fetch(`http://localhost:3001/dogs/${razaId}`)\n        .then(response => response.json())\n        .then(json => {\n            dispatch({type: GET_RAZA_DETAIL, payload : json})\n        })\n    }\n}\n\nexport function getRaza(razaName) {\n    return function (dispatch){\n        return fetch(`http://localhost:3001/dogs?name=${razaName}`)\n        .then(response => response.json())\n        .then(json => {\n            dispatch({type: GET_RAZA, payload : json})\n        })\n    }\n}\n\n\n\nexport function getTemperamentos() {\n    return function (dispatch){\n        return fetch(`http://localhost:3001/temperament`)\n        .then(response => response.json())\n        .then(json => {\n            dispatch({type: GET_TEMPERAMENTO, payload : json})\n        })\n    }\n}\n\n\nexport function sort(orden, razas){\n    let razaSort = [...razas]\n\n    razaSort.sort(function(a,b){\n        var nombreA = a.name.toUpperCase();\n        var nombreB = b.name.toUpperCase();\n\n        if(orden === ASD){\n            if(nombreA < nombreB){\n                return -1;\n            }\n            if(nombreA > nombreB){\n                return 1\n            }\n            return 0\n        }\n        if(orden === DES){\n            if(nombreA < nombreB){\n                return 1;\n            }\n            if(nombreA > nombreB){\n                return -1\n            }\n            return 0\n        }\n    })\n    return function(dispatch){\n        dispatch({type: SORT_RAZA, payload: razaSort})\n    }\n}\n\nexport function filtroTemp(razaActual, temperamento){\n    let filtro = [...razaActual];\n    filtro = filtro.filter(actual =>{\n        if(actual.temperament){\n            let razaTemp = actual.temperament.split(', ')\n            return razaTemp.includes(temperamento);\n        }else{\n            return false\n        }\n    })\n    return function(dispatch){\n        dispatch({type:SORT_RAZA, payload: filtro})\n    }\n}\n\n\n\n//https://api.thedogapi.com/v1/images/search?breed_ids=1\n// forma de buscar por id"]},"metadata":{},"sourceType":"module"}